# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.22

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/anaskhan/proj/buildroid

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/anaskhan/proj/buildroid/build

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
	/usr/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components
.PHONY : list_install_components/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip/fast

# The main all target
all: cmake_check_build_system
	$(CMAKE_COMMAND) -E cmake_progress_start /home/anaskhan/proj/buildroid/build/CMakeFiles /home/anaskhan/proj/buildroid/build//CMakeFiles/progress.marks
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/anaskhan/proj/buildroid/build/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

#=============================================================================
# Target rules for targets named Buildroid

# Build rule for target.
Buildroid: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 Buildroid
.PHONY : Buildroid

# fast build rule for target.
Buildroid/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/build
.PHONY : Buildroid/fast

#=============================================================================
# Target rules for targets named sqlite_cpp

# Build rule for target.
sqlite_cpp: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 sqlite_cpp
.PHONY : sqlite_cpp

# fast build rule for target.
sqlite_cpp/fast:
	$(MAKE) $(MAKESILENT) -f sqlite_cpp/CMakeFiles/sqlite_cpp.dir/build.make sqlite_cpp/CMakeFiles/sqlite_cpp.dir/build
.PHONY : sqlite_cpp/fast

#=============================================================================
# Target rules for targets named tgbot_fragment

# Build rule for target.
tgbot_fragment: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 tgbot_fragment
.PHONY : tgbot_fragment

# fast build rule for target.
tgbot_fragment/fast:
	$(MAKE) $(MAKESILENT) -f tgbot_fragment/CMakeFiles/tgbot_fragment.dir/build.make tgbot_fragment/CMakeFiles/tgbot_fragment.dir/build
.PHONY : tgbot_fragment/fast

#=============================================================================
# Target rules for targets named TgBot

# Build rule for target.
TgBot: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 TgBot
.PHONY : TgBot

# fast build rule for target.
TgBot/fast:
	$(MAKE) $(MAKESILENT) -f tgbot_fragment/tgbot-cpp/CMakeFiles/TgBot.dir/build.make tgbot_fragment/tgbot-cpp/CMakeFiles/TgBot.dir/build
.PHONY : TgBot/fast

#=============================================================================
# Target rules for targets named Main

# Build rule for target.
Main: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 Main
.PHONY : Main

# fast build rule for target.
Main/fast:
	$(MAKE) $(MAKESILENT) -f tgbot_fragment/test/CMakeFiles/Main.dir/build.make tgbot_fragment/test/CMakeFiles/Main.dir/build
.PHONY : Main/fast

#=============================================================================
# Target rules for targets named http-parser

# Build rule for target.
http-parser: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 http-parser
.PHONY : http-parser

# fast build rule for target.
http-parser/fast:
	$(MAKE) $(MAKESILENT) -f libgit2/deps/http-parser/CMakeFiles/http-parser.dir/build.make libgit2/deps/http-parser/CMakeFiles/http-parser.dir/build
.PHONY : http-parser/fast

#=============================================================================
# Target rules for targets named pcre

# Build rule for target.
pcre: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 pcre
.PHONY : pcre

# fast build rule for target.
pcre/fast:
	$(MAKE) $(MAKESILENT) -f libgit2/deps/pcre/CMakeFiles/pcre.dir/build.make libgit2/deps/pcre/CMakeFiles/pcre.dir/build
.PHONY : pcre/fast

#=============================================================================
# Target rules for targets named xdiff

# Build rule for target.
xdiff: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 xdiff
.PHONY : xdiff

# fast build rule for target.
xdiff/fast:
	$(MAKE) $(MAKESILENT) -f libgit2/deps/xdiff/CMakeFiles/xdiff.dir/build.make libgit2/deps/xdiff/CMakeFiles/xdiff.dir/build
.PHONY : xdiff/fast

#=============================================================================
# Target rules for targets named ntlmclient

# Build rule for target.
ntlmclient: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ntlmclient
.PHONY : ntlmclient

# fast build rule for target.
ntlmclient/fast:
	$(MAKE) $(MAKESILENT) -f libgit2/deps/ntlmclient/CMakeFiles/ntlmclient.dir/build.make libgit2/deps/ntlmclient/CMakeFiles/ntlmclient.dir/build
.PHONY : ntlmclient/fast

#=============================================================================
# Target rules for targets named libgit2

# Build rule for target.
libgit2: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 libgit2
.PHONY : libgit2

# fast build rule for target.
libgit2/fast:
	$(MAKE) $(MAKESILENT) -f libgit2/src/libgit2/CMakeFiles/libgit2.dir/build.make libgit2/src/libgit2/CMakeFiles/libgit2.dir/build
.PHONY : libgit2/fast

#=============================================================================
# Target rules for targets named libgit2package

# Build rule for target.
libgit2package: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 libgit2package
.PHONY : libgit2package

# fast build rule for target.
libgit2package/fast:
	$(MAKE) $(MAKESILENT) -f libgit2/src/libgit2/CMakeFiles/libgit2package.dir/build.make libgit2/src/libgit2/CMakeFiles/libgit2package.dir/build
.PHONY : libgit2package/fast

#=============================================================================
# Target rules for targets named util

# Build rule for target.
util: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 util
.PHONY : util

# fast build rule for target.
util/fast:
	$(MAKE) $(MAKESILENT) -f libgit2/src/util/CMakeFiles/util.dir/build.make libgit2/src/util/CMakeFiles/util.dir/build
.PHONY : util/fast

#=============================================================================
# Target rules for targets named git2_cli

# Build rule for target.
git2_cli: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 git2_cli
.PHONY : git2_cli

# fast build rule for target.
git2_cli/fast:
	$(MAKE) $(MAKESILENT) -f libgit2/src/cli/CMakeFiles/git2_cli.dir/build.make libgit2/src/cli/CMakeFiles/git2_cli.dir/build
.PHONY : git2_cli/fast

#=============================================================================
# Target rules for targets named headertest

# Build rule for target.
headertest: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 headertest
.PHONY : headertest

# fast build rule for target.
headertest/fast:
	$(MAKE) $(MAKESILENT) -f libgit2/tests/headertest/CMakeFiles/headertest.dir/build.make libgit2/tests/headertest/CMakeFiles/headertest.dir/build
.PHONY : headertest/fast

#=============================================================================
# Target rules for targets named libgit2_tests

# Build rule for target.
libgit2_tests: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 libgit2_tests
.PHONY : libgit2_tests

# fast build rule for target.
libgit2_tests/fast:
	$(MAKE) $(MAKESILENT) -f libgit2/tests/libgit2/CMakeFiles/libgit2_tests.dir/build.make libgit2/tests/libgit2/CMakeFiles/libgit2_tests.dir/build
.PHONY : libgit2_tests/fast

#=============================================================================
# Target rules for targets named util_tests

# Build rule for target.
util_tests: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 util_tests
.PHONY : util_tests

# fast build rule for target.
util_tests/fast:
	$(MAKE) $(MAKESILENT) -f libgit2/tests/util/CMakeFiles/util_tests.dir/build.make libgit2/tests/util/CMakeFiles/util_tests.dir/build
.PHONY : util_tests/fast

src/DatabaseController.o: src/DatabaseController.cpp.o
.PHONY : src/DatabaseController.o

# target to build an object file
src/DatabaseController.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/DatabaseController.cpp.o
.PHONY : src/DatabaseController.cpp.o

src/DatabaseController.i: src/DatabaseController.cpp.i
.PHONY : src/DatabaseController.i

# target to preprocess a source file
src/DatabaseController.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/DatabaseController.cpp.i
.PHONY : src/DatabaseController.cpp.i

src/DatabaseController.s: src/DatabaseController.cpp.s
.PHONY : src/DatabaseController.s

# target to generate assembly for a file
src/DatabaseController.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/DatabaseController.cpp.s
.PHONY : src/DatabaseController.cpp.s

src/GitManager.o: src/GitManager.cpp.o
.PHONY : src/GitManager.o

# target to build an object file
src/GitManager.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/GitManager.cpp.o
.PHONY : src/GitManager.cpp.o

src/GitManager.i: src/GitManager.cpp.i
.PHONY : src/GitManager.i

# target to preprocess a source file
src/GitManager.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/GitManager.cpp.i
.PHONY : src/GitManager.cpp.i

src/GitManager.s: src/GitManager.cpp.s
.PHONY : src/GitManager.s

# target to generate assembly for a file
src/GitManager.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/GitManager.cpp.s
.PHONY : src/GitManager.cpp.s

src/Main.o: src/Main.cpp.o
.PHONY : src/Main.o

# target to build an object file
src/Main.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/Main.cpp.o
.PHONY : src/Main.cpp.o

src/Main.i: src/Main.cpp.i
.PHONY : src/Main.i

# target to preprocess a source file
src/Main.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/Main.cpp.i
.PHONY : src/Main.cpp.i

src/Main.s: src/Main.cpp.s
.PHONY : src/Main.s

# target to generate assembly for a file
src/Main.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/Main.cpp.s
.PHONY : src/Main.cpp.s

src/MainDatabase.o: src/MainDatabase.cpp.o
.PHONY : src/MainDatabase.o

# target to build an object file
src/MainDatabase.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/MainDatabase.cpp.o
.PHONY : src/MainDatabase.cpp.o

src/MainDatabase.i: src/MainDatabase.cpp.i
.PHONY : src/MainDatabase.i

# target to preprocess a source file
src/MainDatabase.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/MainDatabase.cpp.i
.PHONY : src/MainDatabase.cpp.i

src/MainDatabase.s: src/MainDatabase.cpp.s
.PHONY : src/MainDatabase.s

# target to generate assembly for a file
src/MainDatabase.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/MainDatabase.cpp.s
.PHONY : src/MainDatabase.cpp.s

src/fragments/AppFragment.o: src/fragments/AppFragment.cpp.o
.PHONY : src/fragments/AppFragment.o

# target to build an object file
src/fragments/AppFragment.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/fragments/AppFragment.cpp.o
.PHONY : src/fragments/AppFragment.cpp.o

src/fragments/AppFragment.i: src/fragments/AppFragment.cpp.i
.PHONY : src/fragments/AppFragment.i

# target to preprocess a source file
src/fragments/AppFragment.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/fragments/AppFragment.cpp.i
.PHONY : src/fragments/AppFragment.cpp.i

src/fragments/AppFragment.s: src/fragments/AppFragment.cpp.s
.PHONY : src/fragments/AppFragment.s

# target to generate assembly for a file
src/fragments/AppFragment.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/fragments/AppFragment.cpp.s
.PHONY : src/fragments/AppFragment.cpp.s

src/fragments/BaseFragment.o: src/fragments/BaseFragment.cpp.o
.PHONY : src/fragments/BaseFragment.o

# target to build an object file
src/fragments/BaseFragment.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/fragments/BaseFragment.cpp.o
.PHONY : src/fragments/BaseFragment.cpp.o

src/fragments/BaseFragment.i: src/fragments/BaseFragment.cpp.i
.PHONY : src/fragments/BaseFragment.i

# target to preprocess a source file
src/fragments/BaseFragment.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/fragments/BaseFragment.cpp.i
.PHONY : src/fragments/BaseFragment.cpp.i

src/fragments/BaseFragment.s: src/fragments/BaseFragment.cpp.s
.PHONY : src/fragments/BaseFragment.s

# target to generate assembly for a file
src/fragments/BaseFragment.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/fragments/BaseFragment.cpp.s
.PHONY : src/fragments/BaseFragment.cpp.s

src/fragments/BuildTypeFragment.o: src/fragments/BuildTypeFragment.cpp.o
.PHONY : src/fragments/BuildTypeFragment.o

# target to build an object file
src/fragments/BuildTypeFragment.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/fragments/BuildTypeFragment.cpp.o
.PHONY : src/fragments/BuildTypeFragment.cpp.o

src/fragments/BuildTypeFragment.i: src/fragments/BuildTypeFragment.cpp.i
.PHONY : src/fragments/BuildTypeFragment.i

# target to preprocess a source file
src/fragments/BuildTypeFragment.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/fragments/BuildTypeFragment.cpp.i
.PHONY : src/fragments/BuildTypeFragment.cpp.i

src/fragments/BuildTypeFragment.s: src/fragments/BuildTypeFragment.cpp.s
.PHONY : src/fragments/BuildTypeFragment.s

# target to generate assembly for a file
src/fragments/BuildTypeFragment.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/fragments/BuildTypeFragment.cpp.s
.PHONY : src/fragments/BuildTypeFragment.cpp.s

src/fragments/ConfirmFragment.o: src/fragments/ConfirmFragment.cpp.o
.PHONY : src/fragments/ConfirmFragment.o

# target to build an object file
src/fragments/ConfirmFragment.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/fragments/ConfirmFragment.cpp.o
.PHONY : src/fragments/ConfirmFragment.cpp.o

src/fragments/ConfirmFragment.i: src/fragments/ConfirmFragment.cpp.i
.PHONY : src/fragments/ConfirmFragment.i

# target to preprocess a source file
src/fragments/ConfirmFragment.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/fragments/ConfirmFragment.cpp.i
.PHONY : src/fragments/ConfirmFragment.cpp.i

src/fragments/ConfirmFragment.s: src/fragments/ConfirmFragment.cpp.s
.PHONY : src/fragments/ConfirmFragment.s

# target to generate assembly for a file
src/fragments/ConfirmFragment.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/fragments/ConfirmFragment.cpp.s
.PHONY : src/fragments/ConfirmFragment.cpp.s

src/fragments/LoginFragment.o: src/fragments/LoginFragment.cpp.o
.PHONY : src/fragments/LoginFragment.o

# target to build an object file
src/fragments/LoginFragment.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/fragments/LoginFragment.cpp.o
.PHONY : src/fragments/LoginFragment.cpp.o

src/fragments/LoginFragment.i: src/fragments/LoginFragment.cpp.i
.PHONY : src/fragments/LoginFragment.i

# target to preprocess a source file
src/fragments/LoginFragment.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/fragments/LoginFragment.cpp.i
.PHONY : src/fragments/LoginFragment.cpp.i

src/fragments/LoginFragment.s: src/fragments/LoginFragment.cpp.s
.PHONY : src/fragments/LoginFragment.s

# target to generate assembly for a file
src/fragments/LoginFragment.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/fragments/LoginFragment.cpp.s
.PHONY : src/fragments/LoginFragment.cpp.s

src/fragments/MainFragment.o: src/fragments/MainFragment.cpp.o
.PHONY : src/fragments/MainFragment.o

# target to build an object file
src/fragments/MainFragment.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/fragments/MainFragment.cpp.o
.PHONY : src/fragments/MainFragment.cpp.o

src/fragments/MainFragment.i: src/fragments/MainFragment.cpp.i
.PHONY : src/fragments/MainFragment.i

# target to preprocess a source file
src/fragments/MainFragment.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/fragments/MainFragment.cpp.i
.PHONY : src/fragments/MainFragment.cpp.i

src/fragments/MainFragment.s: src/fragments/MainFragment.cpp.s
.PHONY : src/fragments/MainFragment.s

# target to generate assembly for a file
src/fragments/MainFragment.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/fragments/MainFragment.cpp.s
.PHONY : src/fragments/MainFragment.cpp.s

src/fragments/NoteFragment.o: src/fragments/NoteFragment.cpp.o
.PHONY : src/fragments/NoteFragment.o

# target to build an object file
src/fragments/NoteFragment.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/fragments/NoteFragment.cpp.o
.PHONY : src/fragments/NoteFragment.cpp.o

src/fragments/NoteFragment.i: src/fragments/NoteFragment.cpp.i
.PHONY : src/fragments/NoteFragment.i

# target to preprocess a source file
src/fragments/NoteFragment.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/fragments/NoteFragment.cpp.i
.PHONY : src/fragments/NoteFragment.cpp.i

src/fragments/NoteFragment.s: src/fragments/NoteFragment.cpp.s
.PHONY : src/fragments/NoteFragment.s

# target to generate assembly for a file
src/fragments/NoteFragment.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/fragments/NoteFragment.cpp.s
.PHONY : src/fragments/NoteFragment.cpp.s

src/fragments/TaxiFragment.o: src/fragments/TaxiFragment.cpp.o
.PHONY : src/fragments/TaxiFragment.o

# target to build an object file
src/fragments/TaxiFragment.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/fragments/TaxiFragment.cpp.o
.PHONY : src/fragments/TaxiFragment.cpp.o

src/fragments/TaxiFragment.i: src/fragments/TaxiFragment.cpp.i
.PHONY : src/fragments/TaxiFragment.i

# target to preprocess a source file
src/fragments/TaxiFragment.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/fragments/TaxiFragment.cpp.i
.PHONY : src/fragments/TaxiFragment.cpp.i

src/fragments/TaxiFragment.s: src/fragments/TaxiFragment.cpp.s
.PHONY : src/fragments/TaxiFragment.s

# target to generate assembly for a file
src/fragments/TaxiFragment.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/fragments/TaxiFragment.cpp.s
.PHONY : src/fragments/TaxiFragment.cpp.s

src/tgbot_fragment_db_impl/FragmentStateController.o: src/tgbot_fragment_db_impl/FragmentStateController.cpp.o
.PHONY : src/tgbot_fragment_db_impl/FragmentStateController.o

# target to build an object file
src/tgbot_fragment_db_impl/FragmentStateController.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/tgbot_fragment_db_impl/FragmentStateController.cpp.o
.PHONY : src/tgbot_fragment_db_impl/FragmentStateController.cpp.o

src/tgbot_fragment_db_impl/FragmentStateController.i: src/tgbot_fragment_db_impl/FragmentStateController.cpp.i
.PHONY : src/tgbot_fragment_db_impl/FragmentStateController.i

# target to preprocess a source file
src/tgbot_fragment_db_impl/FragmentStateController.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/tgbot_fragment_db_impl/FragmentStateController.cpp.i
.PHONY : src/tgbot_fragment_db_impl/FragmentStateController.cpp.i

src/tgbot_fragment_db_impl/FragmentStateController.s: src/tgbot_fragment_db_impl/FragmentStateController.cpp.s
.PHONY : src/tgbot_fragment_db_impl/FragmentStateController.s

# target to generate assembly for a file
src/tgbot_fragment_db_impl/FragmentStateController.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/tgbot_fragment_db_impl/FragmentStateController.cpp.s
.PHONY : src/tgbot_fragment_db_impl/FragmentStateController.cpp.s

src/utils.o: src/utils.cpp.o
.PHONY : src/utils.o

# target to build an object file
src/utils.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/utils.cpp.o
.PHONY : src/utils.cpp.o

src/utils.i: src/utils.cpp.i
.PHONY : src/utils.i

# target to preprocess a source file
src/utils.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/utils.cpp.i
.PHONY : src/utils.cpp.i

src/utils.s: src/utils.cpp.s
.PHONY : src/utils.s

# target to generate assembly for a file
src/utils.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Buildroid.dir/build.make CMakeFiles/Buildroid.dir/src/utils.cpp.s
.PHONY : src/utils.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... install"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... list_install_components"
	@echo "... rebuild_cache"
	@echo "... Buildroid"
	@echo "... Main"
	@echo "... TgBot"
	@echo "... git2_cli"
	@echo "... headertest"
	@echo "... http-parser"
	@echo "... libgit2"
	@echo "... libgit2_tests"
	@echo "... libgit2package"
	@echo "... ntlmclient"
	@echo "... pcre"
	@echo "... sqlite_cpp"
	@echo "... tgbot_fragment"
	@echo "... util"
	@echo "... util_tests"
	@echo "... xdiff"
	@echo "... src/DatabaseController.o"
	@echo "... src/DatabaseController.i"
	@echo "... src/DatabaseController.s"
	@echo "... src/GitManager.o"
	@echo "... src/GitManager.i"
	@echo "... src/GitManager.s"
	@echo "... src/Main.o"
	@echo "... src/Main.i"
	@echo "... src/Main.s"
	@echo "... src/MainDatabase.o"
	@echo "... src/MainDatabase.i"
	@echo "... src/MainDatabase.s"
	@echo "... src/fragments/AppFragment.o"
	@echo "... src/fragments/AppFragment.i"
	@echo "... src/fragments/AppFragment.s"
	@echo "... src/fragments/BaseFragment.o"
	@echo "... src/fragments/BaseFragment.i"
	@echo "... src/fragments/BaseFragment.s"
	@echo "... src/fragments/BuildTypeFragment.o"
	@echo "... src/fragments/BuildTypeFragment.i"
	@echo "... src/fragments/BuildTypeFragment.s"
	@echo "... src/fragments/ConfirmFragment.o"
	@echo "... src/fragments/ConfirmFragment.i"
	@echo "... src/fragments/ConfirmFragment.s"
	@echo "... src/fragments/LoginFragment.o"
	@echo "... src/fragments/LoginFragment.i"
	@echo "... src/fragments/LoginFragment.s"
	@echo "... src/fragments/MainFragment.o"
	@echo "... src/fragments/MainFragment.i"
	@echo "... src/fragments/MainFragment.s"
	@echo "... src/fragments/NoteFragment.o"
	@echo "... src/fragments/NoteFragment.i"
	@echo "... src/fragments/NoteFragment.s"
	@echo "... src/fragments/TaxiFragment.o"
	@echo "... src/fragments/TaxiFragment.i"
	@echo "... src/fragments/TaxiFragment.s"
	@echo "... src/tgbot_fragment_db_impl/FragmentStateController.o"
	@echo "... src/tgbot_fragment_db_impl/FragmentStateController.i"
	@echo "... src/tgbot_fragment_db_impl/FragmentStateController.s"
	@echo "... src/utils.o"
	@echo "... src/utils.i"
	@echo "... src/utils.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

